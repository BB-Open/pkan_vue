// import Vue itself
import Vue from 'vue';
// vuex store for state distribution
import {store} from './components/store/Store'
// static (non reactive data)
import VueStatic from 'vue-static'
// utilizing websockets
import VueSocketIO from 'vue-socket.io';
// Usage of the modal plugin
// Logging related
import VueLogger from 'vuejs-logger';
// Router configuration
import {WEBSOCKET_URL} from './config';
import Router from 'vue-router'
// Piwik site statistics
import VueMatomo from 'vue-matomo'
// import the app
import App from './App.vue';
import {router} from './components/routing/routing';

// Global event bus
Vue.prototype.$EventBus = new Vue();

// use the namespaced variant which states clearer which properties are non reactive
Vue.use(VueStatic, {namespaced: true});


const isProduction = process.env.NODE_ENV === 'production';

const options = {
  isEnabled: true,
  logLevel: isProduction ? 'error' : 'debug',
  stringifyArguments: false,
  showLogLevel: true,
  showMethodName: true,
  separator: '|',
  showConsoleColors: true
};
Vue.use(VueLogger, options);


Vue.use(Router);

Vue.use(VueMatomo, {
  // Configure your matomo server and site by providing
  host: 'https://piwik.inqbus.de',
  siteId: 3,

  // Changes the default .js and .php endpoint's filename
  // Default: 'piwik'
  trackerFileName: 'piwik',

  // Overrides the autogenerated tracker endpoint entirely
  // Default: undefined
  // trackerUrl: 'https://example.com/whatever/endpoint/you/have',

  // Enables automatically registering pageviews on the router
  router: router,

  // Enables link tracking on regular links. Note that this won't
  // work for routing links (ie. internal Vue router links)
  // Default: true
  enableLinkTracking: true,

  // Require consent before sending tracking information to matomo
  // Default: false
  requireConsent: false,

  // Whether to track the initial page view
  // Default: true
  trackInitialView: true,

  // Whether or not to log debug information
  // Default: false
  debug: false
});


// socketIO connection
Vue.use(new VueSocketIO({
  debug: true,
  connection: WEBSOCKET_URL,
}));

new Vue({
  el: '#app',
  store, // this has to be set to make this.$store access elsewhere possible.
  router,
  render: h => h(App)
});
